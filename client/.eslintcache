[{"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\index.js":"1","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\App.js":"2","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\Login.js":"3","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\User.js":"4","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\Meals.js":"5","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\Home.js":"6","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\Restaurants.js":"7","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\RestProvider.js":"8","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\CartProvider.js":"9","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\Admin.js":"10","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\UserProvider.js":"11","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\OrderProvider.js":"12","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\ReviewProvider.js":"13","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\Signup.js":"14","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\home\\Layout.js":"15","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\address\\Text.js":"16","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\user-context.js":"17","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\cart-context.js":"18","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\rest-context.js":"19","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\address\\PlacesSearch.js":"20","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\review-context.js":"21","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserAccount.js":"22","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\Header.js":"23","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\auth\\LoginForm.js":"24","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\Section.js":"25","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\MapModal.js":"26","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\PaymentMessage.js":"27","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminOrders.js":"28","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\MealContainer.js":"29","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminCarts.js":"30","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminInterface.js":"31","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminCoupons.js":"32","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\Header.js":"33","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminRest.js":"34","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\Header.js":"35","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\order-context.js":"36","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminRestDetail.js":"37","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\auth\\SignupForm.js":"38","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\home\\Header.js":"39","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserFavorites.js":"40","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserInfo.js":"41","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserOrders.js":"42","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\Tags.js":"43","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\MealDetails.js":"44","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\auth\\LoginFormRest.js":"45","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\RestContainer.js":"46","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\MealModal.js":"47","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\About.js":"48","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminMeals.js":"49","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminAddRestaurant.js":"50","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminAddMeal.js":"51","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminAllRest.js":"52","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserFavoritesIcon.js":"53","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminAddCoupon.js":"54","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\cart\\CartIcon.js":"55","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\ReviewForm.js":"56","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminUpdateRest.js":"57","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\RestDetail.js":"58","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserPassword.js":"59","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\Pagination.js":"60","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\Refund.js":"61","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserIcon.js":"62","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\StarRating.js":"63","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\cart\\CartModal.js":"64","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\UserReview.js":"65","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\cart\\CartItem.js":"66"},{"size":263,"mtime":1630420121777,"results":"67","hashOfConfig":"68"},{"size":2041,"mtime":1629279099344,"results":"69","hashOfConfig":"68"},{"size":216,"mtime":1629365509688,"results":"70","hashOfConfig":"68"},{"size":296,"mtime":1632653133939,"results":"71","hashOfConfig":"68"},{"size":915,"mtime":1632652966406,"results":"72","hashOfConfig":"68"},{"size":659,"mtime":1629387366836,"results":"73","hashOfConfig":"68"},{"size":3089,"mtime":1632653124423,"results":"74","hashOfConfig":"68"},{"size":6106,"mtime":1629618468925,"results":"75","hashOfConfig":"68"},{"size":6478,"mtime":1629536444984,"results":"76","hashOfConfig":"68"},{"size":1127,"mtime":1632652702429,"results":"77","hashOfConfig":"68"},{"size":8269,"mtime":1632751420997,"results":"78","hashOfConfig":"68"},{"size":4040,"mtime":1632751409413,"results":"79","hashOfConfig":"68"},{"size":4014,"mtime":1632654312865,"results":"80","hashOfConfig":"68"},{"size":221,"mtime":1629365569653,"results":"81","hashOfConfig":"68"},{"size":630,"mtime":1630310365681,"results":"82","hashOfConfig":"68"},{"size":1231,"mtime":1629297326157,"results":"83","hashOfConfig":"68"},{"size":603,"mtime":1626081083244,"results":"84","hashOfConfig":"68"},{"size":577,"mtime":1626359779276,"results":"85","hashOfConfig":"68"},{"size":598,"mtime":1626769377438,"results":"86","hashOfConfig":"68"},{"size":555,"mtime":1629302499335,"results":"87","hashOfConfig":"68"},{"size":389,"mtime":1626972146608,"results":"88","hashOfConfig":"68"},{"size":2119,"mtime":1632734780246,"results":"89","hashOfConfig":"68"},{"size":1099,"mtime":1632652920169,"results":"90","hashOfConfig":"68"},{"size":2740,"mtime":1629388263914,"results":"91","hashOfConfig":"68"},{"size":1115,"mtime":1626944274921,"results":"92","hashOfConfig":"68"},{"size":3760,"mtime":1629473857703,"results":"93","hashOfConfig":"68"},{"size":981,"mtime":1625572744398,"results":"94","hashOfConfig":"68"},{"size":5647,"mtime":1632652585630,"results":"95","hashOfConfig":"68"},{"size":4126,"mtime":1626357906283,"results":"96","hashOfConfig":"68"},{"size":2710,"mtime":1632756892892,"results":"97","hashOfConfig":"68"},{"size":1254,"mtime":1626368104627,"results":"98","hashOfConfig":"68"},{"size":2338,"mtime":1632751377131,"results":"99","hashOfConfig":"68"},{"size":4261,"mtime":1632749743798,"results":"100","hashOfConfig":"68"},{"size":1292,"mtime":1626707281910,"results":"101","hashOfConfig":"68"},{"size":2778,"mtime":1632652874570,"results":"102","hashOfConfig":"68"},{"size":646,"mtime":1626254318034,"results":"103","hashOfConfig":"68"},{"size":3866,"mtime":1632756930405,"results":"104","hashOfConfig":"68"},{"size":5435,"mtime":1629380703336,"results":"105","hashOfConfig":"68"},{"size":1279,"mtime":1629380094832,"results":"106","hashOfConfig":"68"},{"size":1933,"mtime":1626972866123,"results":"107","hashOfConfig":"68"},{"size":4581,"mtime":1626012530180,"results":"108","hashOfConfig":"68"},{"size":5642,"mtime":1632751398767,"results":"109","hashOfConfig":"68"},{"size":1029,"mtime":1629534306447,"results":"110","hashOfConfig":"68"},{"size":1769,"mtime":1626434044701,"results":"111","hashOfConfig":"68"},{"size":1501,"mtime":1624199960163,"results":"112","hashOfConfig":"68"},{"size":1669,"mtime":1629463918740,"results":"113","hashOfConfig":"68"},{"size":3420,"mtime":1632741571797,"results":"114","hashOfConfig":"68"},{"size":2103,"mtime":1626969313366,"results":"115","hashOfConfig":"68"},{"size":5204,"mtime":1630842640335,"results":"116","hashOfConfig":"68"},{"size":5590,"mtime":1630054555647,"results":"117","hashOfConfig":"68"},{"size":3720,"mtime":1632652379100,"results":"118","hashOfConfig":"68"},{"size":1173,"mtime":1632756888398,"results":"119","hashOfConfig":"68"},{"size":746,"mtime":1626022455409,"results":"120","hashOfConfig":"68"},{"size":3136,"mtime":1632652365753,"results":"121","hashOfConfig":"68"},{"size":2314,"mtime":1630411863707,"results":"122","hashOfConfig":"68"},{"size":3268,"mtime":1632652860279,"results":"123","hashOfConfig":"68"},{"size":6705,"mtime":1629456391374,"results":"124","hashOfConfig":"68"},{"size":7097,"mtime":1629971547979,"results":"125","hashOfConfig":"68"},{"size":5354,"mtime":1626081338232,"results":"126","hashOfConfig":"68"},{"size":1649,"mtime":1629465985119,"results":"127","hashOfConfig":"68"},{"size":1529,"mtime":1626345461935,"results":"128","hashOfConfig":"68"},{"size":800,"mtime":1626956872481,"results":"129","hashOfConfig":"68"},{"size":808,"mtime":1624433782847,"results":"130","hashOfConfig":"68"},{"size":3505,"mtime":1629973491417,"results":"131","hashOfConfig":"68"},{"size":1317,"mtime":1626086393622,"results":"132","hashOfConfig":"68"},{"size":1248,"mtime":1632751381346,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1371m2v",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"136"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"136"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"136"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"136"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"136"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"136"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"136"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"136"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"136"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"136"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"136"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"136"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"136"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\index.js",[],["282","283"],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\App.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\Login.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\User.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\Meals.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\Home.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\Restaurants.js",["284"],"import { Fragment, useEffect, useState, useContext, useRef } from 'react';\r\nimport Section from '../components/restaurants/Section';\r\nimport Header from '../components/restaurants/Header';\r\nimport RestContext from './../store/rest-context';\r\nimport { useParams } from 'react-router-dom';\r\nimport MapModal from './../components/restaurants/MapModal';\r\nimport UserContext from '../store/user-context';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Restaurants = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [restaurantMap, setRestaurantMap] = useState({\r\n    name: '',\r\n    coordinates: [],\r\n    distance: '',\r\n  });\r\n  const params = useParams();\r\n  const restCtx = useContext(RestContext);\r\n  const signin = useRef();\r\n  const userCtx = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const loginHandler = async (email, password) => {\r\n    try {\r\n      const result = await userCtx.login(email, password);\r\n      if (result.status === 'success') {\r\n        window.scrollTo(0, 0);\r\n        const [lng, lat] = result.data.user.deliveryAddress.coordinates;\r\n        history.push(`/restaurants/address/${lat}/${lng}`);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const mapModalHandler = (name, coordinates, distance) => {\r\n    setRestaurantMap({\r\n      name,\r\n      coordinates,\r\n      distance: distance.toFixed(2),\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const modalCloseHandler = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const signPageHandler = () => {\r\n    signin.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updateRestaurants = async () => {\r\n      const loggedInUser = localStorage.getItem('user');\r\n      setIsLoading(true);\r\n      if (params.lat && params.lng) {\r\n        const { lat, lng } = params;\r\n        await restCtx.getRestaurantsWithin(lat, lng);\r\n        setIsLoading(false);\r\n      } else if (loggedInUser) {\r\n        const foundUser = JSON.parse(loggedInUser);\r\n        const [lng, lat] = foundUser.deliveryAddress.coordinates;\r\n        await restCtx.getRestaurantsWithin(lat, lng);\r\n        setIsLoading(false);\r\n      } else {\r\n        const searchAddress = localStorage.getItem('search-address');\r\n        if (searchAddress) localStorage.removeItem('search-address');\r\n        await restCtx.getRestaurants();\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    updateRestaurants();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {showModal && (\r\n        <MapModal\r\n          onClose={modalCloseHandler}\r\n          name={restaurantMap.name}\r\n          coordinates={restaurantMap.coordinates}\r\n          distance={restaurantMap.distance}\r\n          userCoordinates={[params.lng, params.lat]}\r\n        />\r\n      )}\r\n      <Header onSignin={signPageHandler} />\r\n      {!isLoading && (\r\n        <Section\r\n          onLogin={loginHandler}\r\n          reference={signin}\r\n          onViewMap={mapModalHandler}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Restaurants;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\RestProvider.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\CartProvider.js",["285"],"import axios from 'axios';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport CartContext from './cart-context';\r\nimport UserContext from './user-context';\r\n\r\nconst CartProvider = (props) => {\r\n  const userCtx = useContext(UserContext);\r\n  const [cartState, setCartState] = useState({\r\n    meals: [],\r\n    price: 0,\r\n    status: '',\r\n    _id: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem('user');\r\n    const existingCart = localStorage.getItem('cart');\r\n    let foundUser;\r\n    if (existingCart) {\r\n      //cart waiting in localStorage\r\n      const foundCart = JSON.parse(existingCart);\r\n      if (loggedInUser) {\r\n        foundUser = JSON.parse(loggedInUser);\r\n      }\r\n      if (\r\n        foundUser &&\r\n        foundUser.role !== 'admin' &&\r\n        foundCart.status === 'new'\r\n      ) {\r\n        updateCartHandler('accepted', foundUser._id, foundCart._id);\r\n      } else {\r\n        fetchCartHandler(foundCart._id);\r\n      }\r\n    } else {\r\n      createCart();\r\n    }\r\n  }, [userCtx._id]);\r\n\r\n  const deleteCartHandler = async (id) => {\r\n    try {\r\n      await axios({\r\n        method: 'DELETE',\r\n        url: `/api/v1/carts/${id}`,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const fetchCartHandler = async (id) => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'GET',\r\n        url: `/api/v1/carts/${id}`,\r\n      });\r\n\r\n      const { cart } = response.data.data;\r\n      const { meals, price, _id, status } = cart;\r\n      localStorage.setItem(\r\n        'cart',\r\n        JSON.stringify({ meals, price, _id, status })\r\n      );\r\n\r\n      setCartState({\r\n        meals,\r\n        price,\r\n        _id,\r\n        status,\r\n      });\r\n    } catch (error) {\r\n      createCart();\r\n    }\r\n  };\r\n\r\n  const createCart = async () => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'POST',\r\n        url: `/api/v1/carts`,\r\n        data: {\r\n          meals: [],\r\n        },\r\n      });\r\n\r\n      const { cart } = response.data.data;\r\n      const { meals, price, _id, status } = cart;\r\n\r\n      localStorage.setItem(\r\n        'cart',\r\n        JSON.stringify({ meals, price, _id, status })\r\n      );\r\n      console.log('cart created');\r\n      setCartState({\r\n        meals,\r\n        price,\r\n        _id,\r\n        status,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const calcMealsAmountHandler = () => {\r\n    if (!cartContext.meals.length) return 0;\r\n    const quantityArray = cartContext.meals.map((meal) => meal.quantity);\r\n    const sum = quantityArray.reduce((acc, val) => acc + val, 0);\r\n    return sum;\r\n  };\r\n\r\n  const addMealToCartHandler = async (id, quantity) => {\r\n    //patch request, insertMeal\r\n    try {\r\n      const response = await axios({\r\n        method: 'PATCH',\r\n        url: `/api/v1/carts/${cartContext._id}/insertMeal`,\r\n        data: {\r\n          meal: id,\r\n          quantity,\r\n        },\r\n      });\r\n      const { cart } = response.data.data;\r\n      const { meals, price, _id, status } = cart;\r\n      setCartState({\r\n        meals,\r\n        price,\r\n        _id,\r\n        status,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n    }\r\n  };\r\n  const removeMealFromCartHandler = async (id) => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'PATCH',\r\n        url: `/api/v1/carts/${cartContext._id}/removeMeal`,\r\n        data: {\r\n          meal: id,\r\n        },\r\n      });\r\n      const { cart } = response.data.data;\r\n      const { meals, price, _id, status } = cart;\r\n      localStorage.setItem(\r\n        'cart',\r\n        JSON.stringify({ meals, price, _id, status })\r\n      );\r\n\r\n      setCartState({\r\n        meals,\r\n        price,\r\n        _id,\r\n        status,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n    }\r\n  };\r\n\r\n  const orderHandler = async (stripePromise, distance) => {\r\n    const stripe = await stripePromise;\r\n\r\n    const response = await axios({\r\n      method: 'POST',\r\n      url: `/api/v1/carts/checkout-session/${cartContext._id}`,\r\n      data: {\r\n        distance,\r\n      },\r\n    });\r\n\r\n    if (response.data.status === 'success') {\r\n      await stripe.redirectToCheckout({\r\n        sessionId: response.data.session.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateCartHandler = async (newStatus, userId, cartId) => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'PATCH',\r\n        url: `/api/v1/carts/${cartId}`,\r\n        data: {\r\n          user: userId,\r\n          status: newStatus,\r\n        },\r\n      });\r\n      const { cart } = response.data.data;\r\n      const { meals, price, _id, status } = cart;\r\n      setCartState({\r\n        meals,\r\n        price,\r\n        _id,\r\n        status,\r\n      });\r\n\r\n      localStorage.setItem(\r\n        'cart',\r\n        JSON.stringify({ meals, price, _id, status })\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const getCartsHandler = async () => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'GET',\r\n        url: `/api/v1/carts/`,\r\n      });\r\n      const { carts } = response.data.data;\r\n\r\n      return carts;\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const deleteCompletedHandler = async () => {\r\n    try {\r\n      await axios({\r\n        method: 'DELETE',\r\n        url: `/api/v1/carts/deleteCompleted`,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n  const deleteAbandonedHandler = async () => {\r\n    try {\r\n      await axios({\r\n        method: 'DELETE',\r\n        url: `/api/v1/carts/deleteAbandoned`,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n  const cartContext = {\r\n    meals: cartState.meals,\r\n    price: cartState.price,\r\n    _id: cartState._id,\r\n    status: cartState.status,\r\n    deleteCart: deleteCartHandler,\r\n    deleteAbandoned: deleteAbandonedHandler,\r\n    deleteCompleted: deleteCompletedHandler,\r\n    getCarts: getCartsHandler,\r\n    updateCart: cartState.updateCartHandler,\r\n    mealsAmount: calcMealsAmountHandler,\r\n    addMeal: addMealToCartHandler,\r\n    removeMeal: removeMealFromCartHandler,\r\n    fetchCart: fetchCartHandler,\r\n    launchOrder: orderHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\Admin.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\UserProvider.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\OrderProvider.js",["286","287"],"import axios from 'axios';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport OrderContext from './order-context';\r\nimport UserContext from './user-context';\r\n\r\nconst OrderProvider = (props) => {\r\n  const userCtx = useContext(UserContext);\r\n  const [orderState, setOrderState] = useState({\r\n    orders: [],\r\n  });\r\n\r\n  const [couponState, setCouponState] = useState({\r\n    coupons: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (userCtx._id) {\r\n      fetchOrdersHandler();\r\n      fetchCouponsHandler();\r\n    }\r\n  }, [userCtx]);\r\n\r\n  const fetchOrdersHandler = async () => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'GET',\r\n        url: `/api/v1/orders/`,\r\n      });\r\n      const { orders } = response.data.data;\r\n      setOrderState({ orders });\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const createOrderHandler = async (meals, price, address, user) => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'POST',\r\n        url: `/api/v1/orders/`,\r\n        data: {\r\n          meals,\r\n          price,\r\n          address,\r\n          user,\r\n        },\r\n      });\r\n      //fetchorders handler\r\n      console.log(response, 'response');\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const updateOrderStatusHandler = async (id, status) => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'PATCH',\r\n        url: `/api/v1/orders/${id}`,\r\n        data: {\r\n          status,\r\n        },\r\n      });\r\n      fetchOrdersHandler();\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const createCouponHandler = async (\r\n    name,\r\n    discount,\r\n    quantity,\r\n    minimumPrice,\r\n    expirationDate,\r\n    restrict,\r\n    description\r\n  ) => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'POST',\r\n        url: `/api/v1/orders/create-coupon`,\r\n        data: {\r\n          name,\r\n          discount,\r\n          date: expirationDate || null,\r\n          maxRedemptions: quantity || null,\r\n          firstTime: restrict || null,\r\n          description: description || null,\r\n          minimumAmount: minimumPrice || null,\r\n        },\r\n      });\r\n\r\n      console.log(response);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const fetchCouponsHandler = async () => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'GET',\r\n        url: `/api/v1/orders/fetch-coupons`,\r\n      });\r\n\r\n      setCouponState({ coupons: response.data.promotionCodes.data });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const deleteCouponHandler = async (id) => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'DELETE',\r\n        url: `/api/v1/orders/delete-coupon`,\r\n        data: {\r\n          coupon: id,\r\n        },\r\n      });\r\n      fetchCouponsHandler();\r\n      // setCouponState({ coupons: response.data.promotionCodes.data });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const refundOrderHandler = async (id) => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'POST',\r\n        url: `/api/v1/orders/refund-order/${id}`,\r\n      });\r\n      fetchOrdersHandler();\r\n      // setCouponState({ coupons: response.data.promotionCodes.data });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const orderContext = {\r\n    orders: orderState.orders,\r\n    coupons: couponState.coupons,\r\n    deleteCoupon: deleteCouponHandler,\r\n    getCoupons: fetchCouponsHandler,\r\n    createCoupon: createCouponHandler,\r\n    refundOrder: refundOrderHandler,\r\n    updateOrderStatus: updateOrderStatusHandler,\r\n    createOrder: createOrderHandler,\r\n    getOrders: fetchOrdersHandler,\r\n  };\r\n\r\n  return (\r\n    <OrderContext.Provider value={orderContext}>\r\n      {props.children}\r\n    </OrderContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrderProvider;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\ReviewProvider.js",["288"],"import axios from 'axios';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport ReviewContext from './review-context';\r\nimport RestContext from './rest-context';\r\n\r\nconst ReviewProvider = (props) => {\r\n  const restCtx = useContext(RestContext);\r\n\r\n  const [reviewState, setReviewState] = useState({\r\n    reviewsArray: [],\r\n    currentUserReview: {},\r\n  });\r\n  useEffect(() => {\r\n    const reviewHandler = async () => {\r\n      const restId = findRestaurant();\r\n      if (restId) {\r\n        await fetchReviews(restId);\r\n      }\r\n    };\r\n    reviewHandler();\r\n  }, [restCtx.currentRestaurant._id]);\r\n\r\n  const fetchReviews = async (id) => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'GET',\r\n        url: `/api/v1/restaurants/${id}/reviews`,\r\n      });\r\n\r\n      const { reviews } = response.data.data;\r\n      handleReviews(reviews);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  const handleReviews = async (reviewsArr) => {\r\n    const loggedInUser = localStorage.getItem('user');\r\n    let review = {};\r\n    if (loggedInUser) {\r\n      const foundUser = JSON.parse(loggedInUser);\r\n      review = reviewsArr.find(\r\n        (reviewEl) => reviewEl.user._id === foundUser._id\r\n      );\r\n    }\r\n    setReviewState({\r\n      reviewsArray: reviewsArr,\r\n      currentUserReview: review,\r\n    });\r\n  };\r\n  const postReviewHandler = async (review, rating) => {\r\n    const restId = findRestaurant();\r\n    try {\r\n      await axios({\r\n        method: 'POST',\r\n        url: `/api/v1/restaurants/${restId}/reviews`,\r\n        data: {\r\n          review: review.current.value,\r\n          rating,\r\n        },\r\n      });\r\n      await fetchReviews(restId);\r\n      updateRestHandler(restId);\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n    }\r\n  };\r\n\r\n  const findRestaurant = () => {\r\n    const foundRestaurant = localStorage.getItem('current-rest');\r\n    if (foundRestaurant) {\r\n      const currentRestaurant = JSON.parse(foundRestaurant);\r\n      return currentRestaurant._id;\r\n    }\r\n  };\r\n\r\n  const updateReviewHandler = async (review, rating) => {\r\n    const restId = findRestaurant();\r\n    try {\r\n      await axios({\r\n        method: 'PATCH',\r\n        url: `/api/v1/restaurants/${restId}/reviews/${reviewState.currentUserReview._id}`,\r\n        data: {\r\n          review: review.current.value,\r\n          rating,\r\n        },\r\n      });\r\n      await fetchReviews(restId);\r\n      updateRestHandler(restId);\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n    }\r\n  };\r\n  const updateRestHandler = async (restId) => {\r\n    const loggedInUser = localStorage.getItem('user');\r\n    let lat,\r\n      lng = '';\r\n    if (loggedInUser) {\r\n      const foundUser = JSON.parse(loggedInUser);\r\n      [lng, lat] = foundUser.deliveryAddress.coordinates;\r\n    }\r\n    await restCtx.updateCurrentRestaurant(restId, lat, lng);\r\n  };\r\n  const deleteReviewHandler = async () => {\r\n    const restId = findRestaurant();\r\n    try {\r\n      await axios({\r\n        method: 'DELETE',\r\n        url: `/api/v1/restaurants/${restId}/reviews/${reviewState.currentUserReview._id}`,\r\n      });\r\n      await fetchReviews(restId);\r\n      updateRestHandler(restId);\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n    }\r\n  };\r\n\r\n  const getLatestHandler = () => {\r\n    const topReviews = reviewState.reviewsArray.filter((el) => el.rating === 5);\r\n    const topFiveLatest = topReviews\r\n      .slice(Math.max(topReviews.length - 4, 0))\r\n      .reverse();\r\n    return topFiveLatest;\r\n  };\r\n\r\n  const reviewContext = {\r\n    reviews: reviewState.reviewsArray,\r\n    currentUserReview: reviewState.currentUserReview,\r\n    postReview: postReviewHandler,\r\n    updateReview: updateReviewHandler,\r\n    deleteReview: deleteReviewHandler,\r\n    getLatest: getLatestHandler,\r\n  };\r\n\r\n  return (\r\n    <ReviewContext.Provider value={reviewContext}>\r\n      {props.children}\r\n    </ReviewContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ReviewProvider;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\pages\\Signup.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\home\\Layout.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\address\\Text.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\user-context.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\cart-context.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\rest-context.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\address\\PlacesSearch.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\review-context.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserAccount.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\Header.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\auth\\LoginForm.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\Section.js",["289","290"],"import classes from \"./Section.module.css\";\r\nimport RestContainer from \"./RestContainer\";\r\nimport { ReactComponent as Logo } from \"./../../assets/arrow.svg\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Tags from \"./Tags\";\r\n\r\nconst Section = (props) => {\r\n  const [footerHidden, setFooterHidden] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", footerHandler);\r\n    return () => window.removeEventListener(\"scroll\", footerHandler);\r\n  }, []);\r\n\r\n  const footerHandler = () => {\r\n    setFooterHidden(() => {\r\n      if (\r\n        document.body.scrollTop > 10 ||\r\n        document.documentElement.scrollTop > 10\r\n      )\r\n        return true;\r\n      return false;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className={classes.section}>\r\n      <RestContainer\r\n        onLogin={props.onLogin}\r\n        reference={props.reference}\r\n        onViewMap={props.onViewMap}\r\n      />\r\n      {!footerHidden && (\r\n        <footer className={classes.footer}>\r\n          <p className={`${classes.p1}`}></p>\r\n        </footer>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\MapModal.js",["291"],"import ReactMapboxGl, { Marker, ZoomControl, Popup } from 'react-mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport { useState } from 'react';\r\nimport restIcon from './../../assets/marker.png';\r\nimport userIcon from './../../assets/user-marker.png';\r\nimport classes from './MapModal.module.css';\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken:\r\n    'pk.eyJ1Ijoia2F0bWlsIiwiYSI6ImNrb2hjd25meTAxNzUycXA4ejV1OHFwcHMifQ.PWjetm-kTu_VQtRo8uB7HA',\r\n});\r\nconst MapModal = (props) => {\r\n  const [showUserPopup, setShowUserPopup] = useState(false);\r\n  const [showRestPopup, setShowRestPopup] = useState(false);\r\n\r\n  const userPopupOn = () => {\r\n    setShowUserPopup(true);\r\n  };\r\n\r\n  const restPopupOn = () => {\r\n    setShowRestPopup(true);\r\n  };\r\n\r\n  const userPopupOff = () => {\r\n    setShowUserPopup(false);\r\n  };\r\n\r\n  const restPopupOff = () => {\r\n    setShowRestPopup(false);\r\n  };\r\n\r\n  //   const geojson = {\r\n  //     type: \"FeatureCollection\",\r\n  //     features: [\r\n  //       {\r\n  //         type: \"Feature\",\r\n  //         geometry: {\r\n  //           type: \"LineString\",\r\n  //           coordinates: [props.coordinates, props.userCoordinates],\r\n  //         },\r\n  //       },\r\n  //     ],\r\n  //   };\r\n  //   const linePaint = {\r\n  //     \"line-color\": \"grey\",\r\n  //     \"line-width\": 2,\r\n  //   };\r\n\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>\r\n        <Map\r\n          style=\"mapbox://styles/katmil/ckpxtwn0r0xgu18nlyvutq39p\"\r\n          containerStyle={{\r\n            height: '100%',\r\n            width: '100%',\r\n            zIndex: '2',\r\n          }}\r\n          zoom={[13]}\r\n          center={props.coordinates}\r\n        >\r\n          <div className={classes['text-button']}>\r\n            <p className={classes.p}>\r\n              approximate distance: {props.distance}km\r\n            </p>\r\n            <div className={classes.button}>\r\n              <span\r\n                onClick={() => {\r\n                  props.onClose();\r\n                }}\r\n                className={classes.close}\r\n              >\r\n                &times;\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <ZoomControl position={'bottom-right'} />\r\n          <Marker\r\n            coordinates={props.coordinates}\r\n            className={classes.marker}\r\n            onMouseEnter={restPopupOn}\r\n            onMouseLeave={restPopupOff}\r\n            anchor=\"bottom\"\r\n          >\r\n            <img\r\n              src={restIcon}\r\n              alt=\"icon\"\r\n              style={{ width: '100%', height: '100%' }}\r\n            />\r\n          </Marker>\r\n          <Marker\r\n            coordinates={props.userCoordinates}\r\n            className={classes.marker}\r\n            anchor=\"bottom\"\r\n            onMouseEnter={userPopupOn}\r\n            onMouseLeave={userPopupOff}\r\n          >\r\n            <img\r\n              src={userIcon}\r\n              alt=\"icon\"\r\n              style={{ width: '100%', height: '100%' }}\r\n            />\r\n          </Marker>\r\n          {showRestPopup && (\r\n            <Popup\r\n              coordinates={props.coordinates}\r\n              offset={{\r\n                bottom: [0, -40],\r\n              }}\r\n              anchor=\"bottom\"\r\n            >\r\n              <div className={classes.popup}>{props.name} Restaurant</div>\r\n            </Popup>\r\n          )}\r\n          {showUserPopup && (\r\n            <Popup\r\n              coordinates={props.userCoordinates}\r\n              offset={{\r\n                bottom: [0, -40],\r\n              }}\r\n              anchor=\"bottom\"\r\n            >\r\n              <div className={classes.popup}>You are here</div>\r\n            </Popup>\r\n          )}\r\n        </Map>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// 44.818847 / 20.454455;\r\nexport default MapModal;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\PaymentMessage.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminOrders.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\MealContainer.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminCarts.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminInterface.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminCoupons.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\Header.js",["292","293","294"],"import { useContext, useEffect, useState, Fragment, useRef } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\nimport CartIcon from '../cart/CartIcon';\r\nimport RestContext from './../../store/rest-context';\r\nimport ReviewContext from './../../store/review-context';\r\nimport UserContext from '../../store/user-context';\r\nimport UserFavoritesIcon from '../user/UserFavoritesIcon';\r\n\r\nconst Header = (props) => {\r\n  const restCtx = useContext(RestContext);\r\n  const reviewCtx = useContext(ReviewContext);\r\n  const userCtx = useContext(UserContext);\r\n  const [favorite, setFavorite] = useState({\r\n    status: false,\r\n    pathExtracted: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    let status;\r\n    if (!cancelled) {\r\n      status =\r\n        userCtx && userCtx.favorites\r\n          ? userCtx.favorites.some((el) => {\r\n              console.log(el);\r\n              return el._id === restCtx.currentRestaurant._id;\r\n            })\r\n          : false;\r\n      let path = document.getElementById('heart');\r\n\r\n      if (status) {\r\n        const emptyPath = path.getAttribute('d');\r\n        const fillPath = emptyPath.split(/\\s{2}/);\r\n        path.setAttribute('d', fillPath[0]);\r\n        setFavorite({\r\n          status: true,\r\n          pathExtracted: fillPath[1],\r\n        });\r\n      }\r\n    }\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, [restCtx.currentRestaurant._id]);\r\n\r\n  const favoriteHandler = async () => {\r\n    let path = document.getElementById('heart');\r\n\r\n    if (!favorite.status) {\r\n      const emptyPath = path.getAttribute('d');\r\n      const fillPath = emptyPath.split(/\\s{2}/);\r\n      path.setAttribute('d', fillPath[0]);\r\n      setFavorite({\r\n        status: true,\r\n        pathExtracted: fillPath[1],\r\n      });\r\n    }\r\n    if (favorite.status) {\r\n      const fillPath = path.getAttribute('d');\r\n      const emptyPath = fillPath.concat(`  ${favorite.pathExtracted}`);\r\n      path.setAttribute('d', emptyPath);\r\n      setFavorite({ status: false, pathExtracted: '' });\r\n    }\r\n\r\n    await userCtx.updateFavorites(restCtx.currentRestaurant);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.cart}>\r\n        {userCtx._id && (\r\n          <div onClick={favoriteHandler} className={classes.heart}>\r\n            <UserFavoritesIcon />\r\n          </div>\r\n        )}\r\n        <CartIcon />\r\n      </div>\r\n      <div className={classes.border}>\r\n        <header\r\n          className={`${classes.header} ${classes['fade-in']}  `}\r\n          style={{\r\n            backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.08), rgba(0, 0, 0, 0.08)),  url(/restaurants/restoran44.jpg)`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center',\r\n          }}\r\n        >\r\n          <div className={classes.content}>\r\n            <NavLink to=\"/home\" className={classes.link}>\r\n              Home\r\n            </NavLink>\r\n            <div className={classes.title}></div>\r\n          </div>\r\n          <div onClick={props.onMenu} className={classes.menu}>\r\n            Menu\r\n          </div>\r\n          <div className={classes['reviews-left']}>\r\n            {reviewCtx.getLatest().map((el) => (\r\n              <p key={el._id} className={classes.reviews}>\r\n                \"{el.review}\"\r\n              </p>\r\n            ))}\r\n          </div>\r\n          <div className={classes['reviews-right']}>\r\n            <p className={classes['rating-title']}>rating:</p>\r\n            <div className={classes.stars}>\r\n              {[...Array(5)].map((_star, index) => {\r\n                index += 0.5;\r\n                return index <= restCtx.currentRestaurant.ratingsAverage ? (\r\n                  <i\r\n                    key={Math.random()}\r\n                    className={`fa fa-star ${classes.star}`}\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                ) : (\r\n                  <i\r\n                    key={Math.random()}\r\n                    className={`fa fa-star-o ${classes.star}`}\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminRest.js",["295","296","297"],"import { useState, Fragment, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RestContext from \"../../store/rest-context\";\r\nimport AdminAddRestaurant from \"./AdminAddRestaurant\";\r\nimport AdminAllRest from \"./AdminAllRest\";\r\nimport classes from \"./AdminRest.module.css\";\r\n\r\nconst AdminRest = () => {\r\n  const restCtx = useContext(RestContext);\r\n  const history = useHistory();\r\n\r\n  const [showRest, setShowRest] = useState(false);\r\n  const [showAddRest, setShowAddRest] = useState(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            setShowAddRest(false);\r\n            setShowRest((prevValue) => !prevValue);\r\n          }}\r\n          className={classes.button}\r\n        >\r\n          {showRest ? \"Hide restaurants\" : \"Show restaurants\"}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setShowAddRest((prevValue) => !prevValue);\r\n            setShowRest(false);\r\n          }}\r\n          className={classes.button}\r\n        >\r\n          {showAddRest ? \"Hide Form\" : \"Add a Restaurant\"}\r\n        </button>\r\n        {showRest && <AdminAllRest />}\r\n        {showAddRest && <AdminAddRestaurant />}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminRest;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\Header.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\store\\order-context.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminRestDetail.js",["298"],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\auth\\SignupForm.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\home\\Header.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserFavorites.js",["299","300"],"import classes from \"./UserFavorites.module.css\";\r\nimport UserContext from \"./../../store/user-context\";\r\nimport { Fragment, useContext, useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport RestContext from \"../../store/rest-context\";\r\n\r\nconst UserFavorites = (props) => {\r\n  const userCtx = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const restCtx = useContext(RestContext);\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <table className={classes.table}>\r\n        <tbody>\r\n          <tr>\r\n            <th>Restaurant</th>\r\n            <th>Address</th>\r\n          </tr>\r\n          {userCtx.favorites &&\r\n            userCtx.favorites.map((fav) => {\r\n              return (\r\n                <tr>\r\n                  <td>\r\n                    <Fragment>\r\n                      <button\r\n                        className={classes.link}\r\n                        onClick={async () => {\r\n                          const [lng, lat] =\r\n                            userCtx.deliveryAddress.coordinates;\r\n                          await restCtx.updateCurrentRestaurant(\r\n                            fav.id,\r\n                            lat,\r\n                            lng\r\n                          );\r\n                          history.push(`/restaurants/${fav.id}/meals`);\r\n                        }}\r\n                      >\r\n                        {fav.name}\r\n                      </button>\r\n                      <img\r\n                        className={classes[\"item-img\"]}\r\n                        src={`/restaurants/${fav.imageCover}`}\r\n                        alt=\"food\"\r\n                      ></img>\r\n                    </Fragment>\r\n                  </td>\r\n                  <td>{fav.location.address}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserFavorites;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserInfo.js",["301"],"import classes from \"./UserInfo.module.css\";\r\nimport PlacesSearch from \"../address/PlacesSearch\";\r\nimport { useContext, useRef, useState, Fragment } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport UserContext from \"../../store/user-context\";\r\nimport UserPassword from \"./UserPassword\";\r\n\r\nconst UserInfo = (props) => {\r\n  const name = useRef();\r\n  const email = useRef();\r\n  const number = useRef();\r\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorEmail, setErrorEmail] = useState(false);\r\n  const [errorPhone, setErrorPhone] = useState(false);\r\n  const [deliveryAddress, setDeliveryAddress] = useState({\r\n    coordinates: [],\r\n    address: \"\",\r\n  });\r\n\r\n  const userCtx = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const getAddressHandler = async (result, lat, lng, text) => {\r\n    setDeliveryAddress({\r\n      coordinates: [lng, lat],\r\n      address: result,\r\n    });\r\n  };\r\n\r\n  const updateUserHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const response = await userCtx.update(\r\n      name.current.value,\r\n      deliveryAddress.coordinates,\r\n      deliveryAddress.address,\r\n      email.current.value,\r\n      number.current.value\r\n    );\r\n    if (response.status === \"success\") {\r\n      setErrorEmail(false);\r\n      setErrorPhone(false);\r\n    } else manageError(response);\r\n    setIsLoading(false);\r\n    // history.go(0);\r\n  };\r\n\r\n  const manageError = (error) => {\r\n    if (error.includes(\"phoneNumber:\")) {\r\n      setErrorPhone(true);\r\n    }\r\n    if (error.includes(\"email:\")) {\r\n      setErrorEmail(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isLoading ? (\r\n        <div className={classes.loader} />\r\n      ) : (\r\n        <div className={classes.container}>\r\n          {userCtx._id && showPasswordForm ? (\r\n            <UserPassword\r\n              isLoading={setIsLoading}\r\n              onButton={() => {\r\n                setShowPasswordForm(false);\r\n              }}\r\n            />\r\n          ) : (\r\n            <form className={classes.form}>\r\n              <div className={classes[\"input-container\"]}>\r\n                <p className={classes.label}>Name:</p>\r\n                <input\r\n                  ref={name}\r\n                  className={classes.input}\r\n                  defaultValue={`${userCtx.name}`}\r\n                />\r\n              </div>\r\n\r\n              <div className={classes[\"input-container\"]}>\r\n                <p className={classes.label}>Delivery address:</p>\r\n                {/* <input className={classes.input} defaultValue=\"Kralja Petra I\" /> */}\r\n                <PlacesSearch\r\n                  onSearch={getAddressHandler}\r\n                  placeholder={`${userCtx.deliveryAddress.address}`}\r\n                  input={classes.input}\r\n                />\r\n              </div>\r\n              <div className={classes[\"input-container\"]}>\r\n                <p className={classes.label}>Email:</p>\r\n                <input\r\n                  ref={email}\r\n                  className={\r\n                    errorEmail ? classes[\"input-error\"] : classes.input\r\n                  }\r\n                  defaultValue={`${userCtx.email}`}\r\n                />\r\n                {errorEmail && (\r\n                  <p className={classes.error}>\r\n                    Please provide a valid email address\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div className={classes[\"input-container\"]}>\r\n                <p className={classes.label}>Phone Number:</p>\r\n                <input\r\n                  className={\r\n                    errorPhone ? classes[\"input-error\"] : classes.input\r\n                  }\r\n                  ref={number}\r\n                  defaultValue={`${userCtx.phoneNumber}`}\r\n                />\r\n\r\n                {errorPhone && (\r\n                  <p className={classes.error}>\r\n                    Not a valid phone number! Valid format is +3816XXXXXXX(X)\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <button\r\n                onClick={() => {\r\n                  setShowPasswordForm(true);\r\n                }}\r\n                className={classes.password}\r\n              >\r\n                Change password?\r\n              </button>\r\n              <button onClick={updateUserHandler} className={classes.button}>\r\n                Update\r\n              </button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserOrders.js",["302"],"import classes from './UserOrders.module.css';\r\nimport OrderContext from './../../store/order-context';\r\nimport { Fragment, useContext, useState } from 'react';\r\nimport Refund from './Refund';\r\n\r\nconst UserOrders = (props) => {\r\n  const orderCtx = useContext(OrderContext);\r\n  const [showRefundModal, setShowRefundModal] = useState(false);\r\n  // useEffect(()=>{\r\n  //   const fetchOrders = async ()=>{\r\n  //     orderCtx.getOrders();\r\n  //   }\r\n  //   fetchOrders();\r\n  // },[])\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {showRefundModal && <Refund />}\r\n      <table className={classes.table}>\r\n        <tbody>\r\n          <tr>\r\n            <th>Order Date</th>\r\n            <th>Delivery address</th>\r\n            <th>Items</th>\r\n            <th>Coupons</th>\r\n            <th>Total</th>\r\n            <th>Status</th>\r\n            {/* <th>Action</th> */}\r\n          </tr>\r\n          {orderCtx.orders.map((order) => {\r\n            return (\r\n              <tr>\r\n                <td>\r\n                  {new Intl.DateTimeFormat('en-GB', {\r\n                    dateStyle: 'full',\r\n                    timeStyle: 'long',\r\n                  }).format(new Date(order.createdAt))}\r\n                </td>\r\n                <td>{order.address}</td>\r\n                <td>\r\n                  {order.meals.map((mealObj) => {\r\n                    return (\r\n                      <Fragment>\r\n                        <p\r\n                          key={mealObj.meal._id}\r\n                        >{`${mealObj.meal.name}, qt.${mealObj.quantity}`}</p>\r\n                        <img\r\n                          className={classes['item-img']}\r\n                          src={`/meals/${mealObj.meal.image}`}\r\n                          alt=\"food\"\r\n                        ></img>\r\n                      </Fragment>\r\n                    );\r\n                  })}\r\n                </td>\r\n                <td>\r\n                  {order.coupon\r\n                    ? `\"${order.coupon.code}\" -${order.coupon.percentOff}%`\r\n                    : 'none'}\r\n                </td>\r\n                {order.coupon ? (\r\n                  <td>\r\n                    {order.meals.map((mealObj, i) => {\r\n                      return (\r\n                        <Fragment>\r\n                          <p\r\n                            className={classes['total-price']}\r\n                            key={mealObj.meal._id}\r\n                          >{`${mealObj.quantity} x ${\r\n                            mealObj.meal.specialOffer\r\n                              ? mealObj.meal.specialOffer\r\n                              : mealObj.meal.price\r\n                          }$`}</p>\r\n                          {i !== order.meals.length - 1 ? '+' : '---------'}\r\n                        </Fragment>\r\n                      );\r\n                    })}\r\n                    <p className={classes['total-price']}>\r\n                      {order.price +\r\n                        order.coupon.amountDiscount -\r\n                        order.deliveryFee}\r\n                      $\r\n                    </p>\r\n                    <p className={classes['total-price']}>+</p>\r\n                    <p className={classes['total-price']}>\r\n                      {order.deliveryFee}$ delivery\r\n                    </p>\r\n                    <p className={classes['total-price']}>---------</p>\r\n                    <p className={classes['total-price']}>\r\n                      {order.price + order.coupon.amountDiscount}$\r\n                    </p>\r\n\r\n                    <p className={classes['total-price']}>\r\n                      -{order.coupon.amountDiscount}$<br></br>----------\r\n                    </p>\r\n                    <p>{order.price}$</p>\r\n                  </td>\r\n                ) : (\r\n                  <td className={classes.total}>\r\n                    {order.meals.map((mealObj, i) => {\r\n                      return (\r\n                        <Fragment>\r\n                          <p\r\n                            className={classes['total-price']}\r\n                            key={mealObj.meal._id}\r\n                          >{`${mealObj.quantity} x ${\r\n                            mealObj.meal.specialOffer\r\n                              ? mealObj.meal.specialOffer\r\n                              : mealObj.meal.price\r\n                          }$`}</p>\r\n                          {i !== order.meals.length - 1 ? '+' : '---------'}\r\n                        </Fragment>\r\n                      );\r\n                    })}\r\n                    <p className={classes['total-price']}>\r\n                      {order.price - order.deliveryFee}$\r\n                    </p>\r\n                    <p className={classes['total-price']}>+</p>\r\n                    <p className={classes['total-price']}>\r\n                      {order.deliveryFee}$ delivery\r\n                    </p>\r\n                    <p className={classes['total-price']}>---------</p>\r\n                    <p className={classes['total-price']}>{order.price}$</p>\r\n                  </td>\r\n                )}\r\n                <td>{order.status}</td>\r\n                {/* <td onClick={(event) => refundOrderHandler(event, order._id)}>\r\n                  {order.status !== 'paid' ? (\r\n                    <button disabled={true} className={classes.button}>\r\n                      Request refund\r\n                    </button>\r\n                  ) : (\r\n                    <button className={classes.button}>Request refund</button>\r\n                  )}\r\n                </td> */}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserOrders;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\Tags.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\MealDetails.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\auth\\LoginFormRest.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\RestContainer.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\MealModal.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\About.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminMeals.js",["303"],"import { Fragment, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport RestContext from '../../store/rest-context';\r\nimport classes from './AdminMeals.module.css';\r\n\r\nconst AdminMeals = () => {\r\n  const restCtx = useContext(RestContext);\r\n  const history = useHistory();\r\n  const name = useRef([]);\r\n  const price = useRef([]);\r\n  const specialOffer = useRef([]);\r\n  const description = useRef([]);\r\n  const ingredients = useRef([]);\r\n  const tag = useRef([]);\r\n  const photo = useRef([]);\r\n\r\n  const updateMealHandler = async (i, id) => {\r\n    const ingredientsArray = ingredients.current[i].value.split(',');\r\n    const tagsArray = tag.current[i].value.split(',');\r\n\r\n    const form = new FormData();\r\n\r\n    ingredientsArray.forEach((ing) => {\r\n      form.append('ingredients', ing.trim());\r\n    });\r\n\r\n    tagsArray.forEach((tag) => {\r\n      form.append('tag', tag.trim());\r\n    });\r\n\r\n    form.append('name', name.current[i].value);\r\n    form.append('price', +price.current[i].value);\r\n    form.append('specialOffer', +specialOffer.current[i].value);\r\n    form.append('description', description.current[i].value);\r\n    form.append('photo', photo.current[i].files[0]);\r\n\r\n    await restCtx.updateMeal(id, form);\r\n    // history.go(0);\r\n  };\r\n\r\n  const deleteMealHandler = async (id) => {\r\n    await restCtx.deleteMeal(id);\r\n    history.go(0);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.container}>\r\n        {restCtx.meals.map((meal, i) => (\r\n          <div className={classes.card}>\r\n            <form>\r\n              <img\r\n                className={classes['item-img']}\r\n                src={`/meals/${meal.image}`}\r\n                alt=\"food\"\r\n              ></img>\r\n\r\n              <input\r\n                className={classes.input}\r\n                type=\"text\"\r\n                defaultValue={meal.name}\r\n                ref={(el) => {\r\n                  name.current.push(el);\r\n                }}\r\n              />\r\n              <div className={classes.wrapper}>\r\n                <p className={classes['p-card']}>price:</p>\r\n                <input\r\n                  className={classes['input-price']}\r\n                  type=\"text\"\r\n                  defaultValue={meal.price}\r\n                  ref={(el) => {\r\n                    price.current.push(el);\r\n                  }}\r\n                />\r\n                <span>$</span>\r\n              </div>\r\n              <p className={classes['p-card']}>specialOffer:</p>\r\n              <input\r\n                className={classes['input-price']}\r\n                type=\"text\"\r\n                ref={(el) => {\r\n                  specialOffer.current.push(el);\r\n                }}\r\n                defaultValue={meal.specialOffer ? meal.specialOffer : ''}\r\n              />\r\n              <span>$</span>\r\n              <br></br>\r\n              <p className={classes['p-card']}>ingredients:</p>\r\n              <input\r\n                className={classes['input-ing']}\r\n                type=\"text\"\r\n                ref={(el) => {\r\n                  ingredients.current.push(el);\r\n                }}\r\n                defaultValue={meal.ingredients.map((ing, i) => ` ${ing}`)}\r\n              />\r\n              <br></br>\r\n              <input\r\n                className={classes.input}\r\n                type=\"file\"\r\n                name=\"photo\"\r\n                id=\"photo\"\r\n                ref={(el) => {\r\n                  photo.current.push(el);\r\n                }}\r\n              />\r\n              <p className={classes['tags']}>tags:</p>\r\n              <input\r\n                className={classes['input-ing']}\r\n                type=\"text\"\r\n                ref={(el) => {\r\n                  tag.current.push(el);\r\n                }}\r\n                defaultValue={meal.tag.map((tag, i) => ` ${tag}`)}\r\n              />\r\n              <br></br>\r\n              <p className={classes['p-card-descrpition']}>description:</p>\r\n              <textarea\r\n                className={classes['input-des']}\r\n                id=\"review\"\r\n                name=\"review\"\r\n                maxLength=\"150\"\r\n                rows=\"2\"\r\n                cols=\"50\"\r\n                style={{ fontFamily: 'Roboto' }}\r\n                ref={(el) => {\r\n                  description.current.push(el);\r\n                }}\r\n                defaultValue={meal.description}\r\n              />\r\n              <div className={classes.buttons}>\r\n                <button\r\n                  onClick={async (event) => {\r\n                    event.preventDefault();\r\n                    updateMealHandler(i, meal._id);\r\n                  }}\r\n                  className={classes.button}\r\n                >\r\n                  Update meal\r\n                </button>\r\n                <button\r\n                  onClick={async (event) => {\r\n                    event.preventDefault();\r\n                    deleteMealHandler(meal._id);\r\n                  }}\r\n                  className={classes.button}\r\n                >\r\n                  Delete meal\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminMeals;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminAddRestaurant.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminAddMeal.js",["304","305"],"import { Fragment, useContext, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport RestContext from '../../store/rest-context';\r\nimport classes from './AdminAddMeal.module.css';\r\nimport axios from 'axios';\r\n\r\nconst AdminAddMeal = () => {\r\n  const restCtx = useContext(RestContext);\r\n  const history = useHistory();\r\n  const name = useRef();\r\n  const price = useRef();\r\n  const specialOffer = useRef();\r\n  const description = useRef();\r\n  const ingredients = useRef();\r\n  const tag = useRef();\r\n  const photo = useRef();\r\n\r\n  const createMealHandler = async (event) => {\r\n    event.preventDefault();\r\n    const ingredientsArray = ingredients.current.value.split(',');\r\n    const tagsArray = tag.current.value.split(',');\r\n\r\n    const form = new FormData();\r\n\r\n    ingredientsArray.forEach((ing) => {\r\n      form.append('ingredients', ing.trim());\r\n    });\r\n\r\n    tagsArray.forEach((tag) => {\r\n      form.append('tag', tag.trim());\r\n    });\r\n    form.append('name', name.current.value);\r\n    form.append('price', +price.current.value);\r\n    form.append('specialOffer', +specialOffer.current.value);\r\n    form.append('description', description.current.value);\r\n    form.append('photo', photo.current.files[0]);\r\n\r\n    await restCtx.createMeal(form);\r\n    // history.go(0);\r\n  };\r\n\r\n  //   beef, onion, garlic, cheddar cheese, mustard, tomato sauce\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.container}>\r\n        <div className={classes.card}>\r\n          <form>\r\n            <p className={classes['p-card']}>name:</p>\r\n            <input\r\n              className={classes.input}\r\n              type=\"text\"\r\n              ref={name}\r\n              maxLength=\"30\"\r\n            />\r\n            <div className={classes.wrapper}>\r\n              <p className={classes['p-card']}>price:</p>\r\n              <input\r\n                className={classes['input-price']}\r\n                type=\"text\"\r\n                ref={price}\r\n              />\r\n              <span>$</span>\r\n            </div>\r\n            <p className={classes['p-card']}>specialOffer:</p>\r\n            <input\r\n              className={classes['input-price']}\r\n              type=\"text\"\r\n              ref={specialOffer}\r\n            />\r\n            <span>$</span>\r\n            <br></br>\r\n            <p className={classes['p-card']}>ingredients:</p>\r\n            <input\r\n              className={classes['input-ing']}\r\n              type=\"text\"\r\n              ref={ingredients}\r\n            />\r\n            <br></br>\r\n            <p className={classes['p-card']}>picture:</p>\r\n            <input\r\n              className={classes.input}\r\n              type=\"file\"\r\n              name=\"photo\"\r\n              id=\"photo\"\r\n              ref={photo}\r\n            />\r\n            <br></br>\r\n            <p className={classes['p-card']}>tags:</p>\r\n            <input className={classes['input-ing']} type=\"text\" ref={tag} />\r\n            <br></br>\r\n            <p className={classes['p-card-descrpition']}>description:</p>\r\n            <textarea\r\n              className={classes['input-des']}\r\n              id=\"review\"\r\n              name=\"review\"\r\n              maxLength=\"150\"\r\n              rows=\"2\"\r\n              cols=\"50\"\r\n              style={{ fontFamily: 'Roboto' }}\r\n              ref={description}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                createMealHandler(event);\r\n              }}\r\n              className={classes.button}\r\n            >\r\n              Add meal\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminAddMeal;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminAllRest.js",["306"],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserFavoritesIcon.js",["307","308","309"],"import classes from \"./UserFavoritesIcon.module.css\";\r\nimport { ReactComponent as Logo } from \"./../../assets/heart.svg\";\r\nimport { useState, Fragment, useContext } from \"react\";\r\nimport UserContext from \"../../store/user-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst UserFavoritesIcon = (props) => {\r\n  const userCtx = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.dropdown}>\r\n        <div className={classes.user}>\r\n          <Logo\r\n            style={{ width: \"50%\" }}\r\n            fill=\"white\"\r\n            className={classes[\"heart-icon\"]}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserFavoritesIcon;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminAddCoupon.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\cart\\CartIcon.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\ReviewForm.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\admin\\AdminUpdateRest.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\RestDetail.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserPassword.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\restaurants\\Pagination.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\Refund.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\user\\UserIcon.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\StarRating.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\cart\\CartModal.js",[],"C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\meals\\UserReview.js",["310"],"import classes from \"./UserReview.module.css\";\r\nimport { useContext } from \"react\";\r\nimport ReviewContext from \"./../../store/review-context\";\r\nimport UserContext from \"./../../store/user-context\";\r\n\r\nconst UserReview = (props) => {\r\n  const reviewCtx = useContext(ReviewContext);\r\n  return (\r\n    <div className={classes[\"review-sent\"]}>\r\n      <p className={classes.message}>Thank you!</p>\r\n      <p className={classes.after}>Your review:</p>\r\n      <p className={classes.review}>\"{reviewCtx.currentUserReview.review}\"</p>\r\n      <div className={classes.rating}>\r\n        {[...Array(5)].map((_star, index) => {\r\n          index += 1;\r\n          return (\r\n            <span\r\n              key={Math.random()}\r\n              className={\r\n                index <= reviewCtx.currentUserReview.rating\r\n                  ? classes.on\r\n                  : classes.off\r\n              }\r\n            >\r\n              &#9733;\r\n            </span>\r\n          );\r\n        })}\r\n        <div className={classes.button}>\r\n          <button onClick={props.onEdit} className={classes.myButton}>\r\n            edit\r\n          </button>\r\n          <button onClick={props.onDelete} className={classes.myButton}>\r\n            delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserReview;\r\n","C:\\Users\\kale\\Desktop\\food_ordering_app\\client\\src\\components\\cart\\CartItem.js",[],{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","severity":1,"message":"316","line":75,"column":6,"nodeType":"317","endLine":75,"endColumn":8,"suggestions":"318"},{"ruleId":"315","severity":1,"message":"319","line":37,"column":6,"nodeType":"317","endLine":37,"endColumn":19,"suggestions":"320"},{"ruleId":"321","severity":1,"message":"322","line":119,"column":13,"nodeType":"323","messageId":"324","endLine":119,"endColumn":21},{"ruleId":"321","severity":1,"message":"322","line":135,"column":13,"nodeType":"323","messageId":"324","endLine":135,"endColumn":21},{"ruleId":"315","severity":1,"message":"325","line":21,"column":6,"nodeType":"317","endLine":21,"endColumn":37,"suggestions":"326"},{"ruleId":"321","severity":1,"message":"327","line":3,"column":28,"nodeType":"323","messageId":"324","endLine":3,"endColumn":32},{"ruleId":"321","severity":1,"message":"328","line":5,"column":8,"nodeType":"323","messageId":"324","endLine":5,"endColumn":12},{"ruleId":"329","severity":1,"message":"330","line":53,"column":11,"nodeType":"331","messageId":"332","endLine":53,"endColumn":67},{"ruleId":"321","severity":1,"message":"333","line":1,"column":53,"nodeType":"323","messageId":"324","endLine":1,"endColumn":59},{"ruleId":"321","severity":1,"message":"334","line":2,"column":19,"nodeType":"323","messageId":"324","endLine":2,"endColumn":29},{"ruleId":"315","severity":1,"message":"335","line":45,"column":6,"nodeType":"317","endLine":45,"endColumn":37,"suggestions":"336"},{"ruleId":"321","severity":1,"message":"337","line":1,"column":42,"nodeType":"323","messageId":"324","endLine":1,"endColumn":51},{"ruleId":"321","severity":1,"message":"338","line":9,"column":9,"nodeType":"323","messageId":"324","endLine":9,"endColumn":16},{"ruleId":"321","severity":1,"message":"339","line":10,"column":9,"nodeType":"323","messageId":"324","endLine":10,"endColumn":16},{"ruleId":"315","severity":1,"message":"340","line":21,"column":6,"nodeType":"317","endLine":21,"endColumn":8,"suggestions":"341"},{"ruleId":"321","severity":1,"message":"337","line":3,"column":32,"nodeType":"323","messageId":"324","endLine":3,"endColumn":41},{"ruleId":"321","severity":1,"message":"342","line":4,"column":10,"nodeType":"323","messageId":"324","endLine":4,"endColumn":17},{"ruleId":"321","severity":1,"message":"339","line":22,"column":9,"nodeType":"323","messageId":"324","endLine":22,"endColumn":16},{"ruleId":"321","severity":1,"message":"343","line":8,"column":27,"nodeType":"323","messageId":"324","endLine":8,"endColumn":45},{"ruleId":"321","severity":1,"message":"337","line":1,"column":32,"nodeType":"323","messageId":"324","endLine":1,"endColumn":41},{"ruleId":"321","severity":1,"message":"344","line":5,"column":8,"nodeType":"323","messageId":"324","endLine":5,"endColumn":13},{"ruleId":"321","severity":1,"message":"339","line":9,"column":9,"nodeType":"323","messageId":"324","endLine":9,"endColumn":16},{"ruleId":"315","severity":1,"message":"345","line":15,"column":6,"nodeType":"317","endLine":15,"endColumn":8,"suggestions":"346"},{"ruleId":"321","severity":1,"message":"347","line":3,"column":10,"nodeType":"323","messageId":"324","endLine":3,"endColumn":18},{"ruleId":"321","severity":1,"message":"348","line":7,"column":9,"nodeType":"323","messageId":"324","endLine":7,"endColumn":16},{"ruleId":"321","severity":1,"message":"339","line":8,"column":9,"nodeType":"323","messageId":"324","endLine":8,"endColumn":16},{"ruleId":"321","severity":1,"message":"349","line":4,"column":8,"nodeType":"323","messageId":"324","endLine":4,"endColumn":19},"no-native-reassign",["350"],"no-negated-in-lhs",["351"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'params' and 'restCtx'. Either include them or remove the dependency array.","ArrayExpression",["352"],"React Hook useEffect has a missing dependency: 'fetchCartHandler'. Either include it or remove the dependency array.",["353"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchReviews'. Either include it or remove the dependency array.",["354"],"'Logo' is defined but never used.","'Tags' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","'useRef' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'userCtx'. Either include it or remove the dependency array.",["355"],"'useEffect' is defined but never used.","'restCtx' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.restId' and 'restCtx'. Either include them or remove the dependency array.",["356"],"'NavLink' is defined but never used.","'setShowRefundModal' is assigned a value but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'restCtx'. Either include it or remove the dependency array.",["357"],"'useState' is defined but never used.","'userCtx' is assigned a value but never used.","'UserContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},"Update the dependencies array to be: [params, restCtx]",{"range":"370","text":"371"},"Update the dependencies array to be: [fetchCartHandler, userCtx._id]",{"range":"372","text":"373"},"Update the dependencies array to be: [fetchReviews, restCtx.currentRestaurant._id]",{"range":"374","text":"375"},"Update the dependencies array to be: [restCtx.currentRestaurant._id, userCtx]",{"range":"376","text":"377"},"Update the dependencies array to be: [params.restId, restCtx]",{"range":"378","text":"379"},"Update the dependencies array to be: [restCtx]",{"range":"380","text":"381"},[2493,2495],"[params, restCtx]",[1026,1039],"[fetchCartHandler, userCtx._id]",[575,606],"[fetchReviews, restCtx.currentRestaurant._id]",[1431,1462],"[restCtx.currentRestaurant._id, userCtx]",[805,807],"[params.restId, restCtx]",[470,472],"[restCtx]"]